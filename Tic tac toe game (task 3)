#include <iostream>
using namespace std;

const char PLAYER1 = 'X';
const char PLAYER2 = 'O';
const char EMPTY = ' ';

void printBoard(char board[3][3]);
bool checkWin(char board[3][3], char player);
bool checkDraw(char board[3][3]);

int main() {
    char board[3][3] = { { EMPTY, EMPTY, EMPTY }, { EMPTY, EMPTY, EMPTY }, { EMPTY, EMPTY, EMPTY } };
    char currentPlayer = PLAYER1;
    int row, col;
    bool gameWon = false;

    while (!gameWon && !checkDraw(board)) {
        printBoard(board);
        cout << "Player " << currentPlayer << ", enter your move (row and column): ";
        cin >> row >> col;

        if (row >= 0 && row < 3 && col >= 0 && col < 3 && board[row][col] == EMPTY) {
            board[row][col] = currentPlayer;
            if (checkWin(board, currentPlayer)) {
                gameWon = true;
                printBoard(board);
                cout << "Player " << currentPlayer << " wins!\n";
            } else {
                currentPlayer = (currentPlayer == PLAYER1) ? PLAYER2 : PLAYER1;
            }
        } else {
            cout << "Invalid move. Try again.\n";
        }
    }

    if (!gameWon && checkDraw(board)) {
        printBoard(board);
        cout << "It's a draw!\n";
    }

    return 0;
}

void printBoard(char board[3][3]) {
    for (int row = 0; row < 3; ++row) {
        for (int col = 0; col < 3; ++col) {
            cout << board[row][col];
            if (col < 2) cout << " | ";
        }
        cout << endl;
        if (row < 2) cout << "---------\n";
    }
}

bool checkWin(char board[3][3], char player) {
    // Check rows and columns
    for (int i = 0; i < 3; ++i) {
        if ((board[i][0] == player && board[i][1] == player && board[i][2] == player) ||
            (board[0][i] == player && board[1][i] == player && board[2][i] == player)) {
            return true;
        }
    }
    // Check diagonals
    if ((board[0][0] == player && board[1][1] == player && board[2][2] == player) ||
        (board[0][2] == player && board[1][1] == player && board[2][0] == player)) {
        return true;
    }
    return false;
}

bool checkDraw(char board[3][3]) {
    for (int row = 0; row < 3; ++row) {
        for (int col = 0; col < 3; ++col) {
            if (board[row][col] == EMPTY) {
                return false;
            }
        }
    }
    return true;
}
